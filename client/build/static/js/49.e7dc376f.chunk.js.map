{"version":3,"sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","sections/@dashboard/user/account/AccountBillingAddressBook.js","sections/@dashboard/user/account/AccountBillingPaymentMethod.js","sections/@dashboard/user/account/AccountBillingInvoiceHistory.js","sections/@dashboard/user/account/AccountBilling.js","sections/@dashboard/user/account/AccountChangePassword.js","sections/@dashboard/user/account/AccountGeneral.js","sections/@dashboard/user/account/AccountNotifications.js","sections/@dashboard/user/account/AccountSocialLinks.js","pages/dashboard/UserAccount.js"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","skipSx","theme","_extends","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","concat","push","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","AccountBillingAddressBook","addressBook","Card","p","Stack","address","Paper","street","city","state","country","zipCode","phone","Button","size","startIcon","Iconify","id","AccountBillingPaymentMethod","cards","isOpen","onOpen","onCancel","direction","xs","md","card","position","border","Image","alt","src","cardType","cardNumber","IconButton","top","right","Collapse","in","marginTop","sm","TextField","fullWidth","label","placeholder","justifyContent","LoadingButton","type","AccountBillingInvoiceHistory","invoices","invoice","minWidth","fDate","createdAt","fCurrency","price","endIcon","AccountBilling","useState","open","setOpen","Grid","container","item","AccountChangePassword","enqueueSnackbar","useSnackbar","ChangePassWordSchema","Yup","shape","oldPassword","required","newPassword","min","confirmNewPassword","oneOf","methods","useForm","resolver","yupResolver","defaultValues","reset","handleSubmit","isSubmitting","formState","onSubmit","a","Promise","resolve","setTimeout","console","error","loading","AccountGeneral","dispatch","useDispatch","useSelector","account","isLoading","displayName","firstName","lastName","email","avatar","phoneNumber1","about","UpdateUserSchema","setValue","data","setAccountValues","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","log","py","px","textAlign","accept","maxSize","onDrop","helperText","mx","fData","rowGap","columnGap","gridTemplateColumns","value","countries","option","code","multiline","rows","ACTIVITY_OPTIONS","APPLICATION_OPTIONS","NOTIFICATION_SETTINGS","AccountNotifications","activityComments","activityAnswers","activityFollows","applicationNews","applicationProduct","applicationBlog","activity","m","application","SOCIAL_LINKS","AccountSocialLinks","facebookLink","socialLink","instagramLink","linkedinLink","twitterLink","setAccountSocialLinks","useEffect","loadAccount","InputProps","startAdornment","InputAdornment","UserAccount","themeStretch","useSettings","translate","useLocales","currentTab","setCurrentTab","ACCOUNT_TABS","_userPayment","_userAddressBook","_userInvoices","Page","title","Container","PATH_APPLICATION","profile","Tabs","scrollButtons","allowScrollButtonsMobile","onChange","e","tab","Tab","disableRipple","capitalCase"],"mappings":"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","file":"static/js/49.e7dc376f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Card, Button, Typography, Stack, Paper } from '@mui/material';\n// components\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nAccountBillingAddressBook.propTypes = {\n  addressBook: PropTypes.array,\n};\n\nexport default function AccountBillingAddressBook({ addressBook }) {\n  return (\n    <Card sx={{ p: 3 }}>\n      <Stack spacing={3} alignItems=\"flex-start\">\n        <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n          Billing Info\n        </Typography>\n\n        {addressBook.map((address) => (\n          <Paper\n            key={address.id}\n            sx={{\n              p: 3,\n              width: 1,\n              bgcolor: 'background.neutral',\n            }}\n          >\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {address.name}\n            </Typography>\n\n            <Typography variant=\"body2\" gutterBottom>\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\n                Address: &nbsp;\n              </Typography>\n              {`${address.street}, ${address.city}, ${address.state}, ${address.country} ${address.zipCode}`}\n            </Typography>\n\n            <Typography variant=\"body2\" gutterBottom>\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\n                Phone: &nbsp;\n              </Typography>\n              {address.phone}\n            </Typography>\n\n            <Box sx={{ mt: 1 }}>\n              <Button\n                color=\"error\"\n                size=\"small\"\n                startIcon={<Iconify icon={'eva:trash-2-outline'} />}\n                onClick={() => {}}\n                sx={{ mr: 1 }}\n              >\n                Delete\n              </Button>\n              <Button size=\"small\" startIcon={<Iconify icon={'eva:edit-fill'} />} onClick={() => {}}>\n                Edit\n              </Button>\n            </Box>\n          </Paper>\n        ))}\n\n        <Button size=\"small\" startIcon={<Iconify icon={'eva:plus-fill'} />}>\n          Add new address\n        </Button>\n      </Stack>\n    </Card>\n  );\n}\n","import PropTypes from 'prop-types';\n// @mui\nimport { Box, Card, Stack, Paper, Button, Collapse, TextField, Typography, IconButton } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// components\nimport Image from '../../../../components/Image';\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nAccountBillingPaymentMethod.propTypes = {\n  cards: PropTypes.array,\n  isOpen: PropTypes.bool,\n  onOpen: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n\nexport default function AccountBillingPaymentMethod({ cards, isOpen, onOpen, onCancel }) {\n  return (\n    <Card sx={{ p: 3 }}>\n      <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: 'text.secondary' }}>\n        Payment Method\n      </Typography>\n\n      <Stack spacing={2} direction={{ xs: 'column', md: 'row' }}>\n        {cards.map((card) => (\n          <Paper\n            key={card.id}\n            sx={{\n              p: 3,\n              width: 1,\n              position: 'relative',\n              border: (theme) => `solid 1px ${theme.palette.grey[500_32]}`,\n            }}\n          >\n            <Image\n              alt=\"icon\"\n              src={\n                card.cardType === 'master_card'\n                  ? 'https://minimal-assets-api.vercel.app/assets/icons/ic_mastercard.svg'\n                  : 'https://minimal-assets-api.vercel.app/assets/icons/ic_visa.svg'\n              }\n              sx={{ mb: 1, maxWidth: 36 }}\n            />\n            <Typography variant=\"subtitle2\">{card.cardNumber}</Typography>\n            <IconButton\n              sx={{\n                top: 8,\n                right: 8,\n                position: 'absolute',\n              }}\n            >\n              <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\n            </IconButton>\n          </Paper>\n        ))}\n      </Stack>\n\n      <Box sx={{ mt: 3 }}>\n        <Button size=\"small\" startIcon={<Iconify icon={'eva:plus-fill'} />} onClick={onOpen}>\n          Add new card\n        </Button>\n      </Box>\n\n      <Collapse in={isOpen}>\n        <Box\n          sx={{\n            padding: 3,\n            marginTop: 3,\n            borderRadius: 1,\n            bgcolor: 'background.neutral',\n          }}\n        >\n          <Stack spacing={3}>\n            <Typography variant=\"subtitle1\">Add new card</Typography>\n\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n              <TextField fullWidth label=\"Name on card\" />\n\n              <TextField fullWidth label=\"Card number\" />\n            </Stack>\n\n            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\n              <TextField fullWidth label=\"Expiration date\" placeholder=\"MM/YY\" />\n\n              <TextField fullWidth label=\"Cvv\" />\n            </Stack>\n\n            <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1.5}>\n              <Button color=\"inherit\" variant=\"outlined\" onClick={onCancel}>\n                Cancel\n              </Button>\n              <LoadingButton type=\"submit\" variant=\"contained\" onClick={onCancel}>\n                Save Change\n              </LoadingButton>\n            </Stack>\n          </Stack>\n        </Box>\n      </Collapse>\n    </Card>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Stack, Link, Button, Typography } from '@mui/material';\n// utils\nimport { fDate } from '../../../../utils/formatTime';\nimport { fCurrency } from '../../../../utils/formatNumber';\n// components\nimport Iconify from '../../../../components/Iconify';\n\n// ----------------------------------------------------------------------\n\nAccountBillingInvoiceHistory.propTypes = {\n  invoices: PropTypes.array,\n};\n\nexport default function AccountBillingInvoiceHistory({ invoices }) {\n  return (\n    <Stack spacing={3} alignItems=\"flex-end\">\n      <Typography variant=\"subtitle1\" sx={{ width: 1 }}>\n        Invoice History\n      </Typography>\n\n      <Stack spacing={2} sx={{ width: 1 }}>\n        {invoices.map((invoice) => (\n          <Stack key={invoice.id} direction=\"row\" justifyContent=\"space-between\" sx={{ width: 1 }}>\n            <Typography variant=\"body2\" sx={{ minWidth: 160 }}>\n              {fDate(invoice.createdAt)}\n            </Typography>\n            <Typography variant=\"body2\">{fCurrency(invoice.price)}</Typography>\n            <Link component={RouterLink} to=\"#\">\n              PDF\n            </Link>\n          </Stack>\n        ))}\n      </Stack>\n\n      <Button size=\"small\" endIcon={<Iconify icon={'eva:arrow-ios-forward-fill'} />}>\n        All invoices\n      </Button>\n    </Stack>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n// @mui\nimport { Box, Grid, Card, Button, Typography, Stack } from '@mui/material';\n//\nimport AccountBillingAddressBook from './AccountBillingAddressBook';\nimport AccountBillingPaymentMethod from './AccountBillingPaymentMethod';\nimport AccountBillingInvoiceHistory from './AccountBillingInvoiceHistory';\n\n// ----------------------------------------------------------------------\n\nAccountBilling.propTypes = {\n  addressBook: PropTypes.array,\n  cards: PropTypes.array,\n  invoices: PropTypes.array,\n};\n\nexport default function AccountBilling({ cards, addressBook, invoices }) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Grid container spacing={5}>\n      <Grid item xs={12} md={8}>\n        <Stack spacing={3}>\n          <Card sx={{ p: 3 }}>\n            <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: 'text.secondary' }}>\n              Your Plan\n            </Typography>\n            <Typography variant=\"h4\">Premium</Typography>\n            <Box\n              sx={{\n                mt: { xs: 2, sm: 0 },\n                position: { sm: 'absolute' },\n                top: { sm: 24 },\n                right: { sm: 24 },\n              }}\n            >\n              <Button size=\"small\" color=\"inherit\" variant=\"outlined\" sx={{ mr: 1 }}>\n                Cancel plan\n              </Button>\n              <Button size=\"small\" variant=\"outlined\">\n                Upgrade plan\n              </Button>\n            </Box>\n          </Card>\n\n          <AccountBillingPaymentMethod\n            cards={cards}\n            isOpen={open}\n            onOpen={() => setOpen(!open)}\n            onCancel={() => setOpen(false)}\n          />\n\n          <AccountBillingAddressBook addressBook={addressBook} />\n        </Stack>\n      </Grid>\n\n      <Grid item xs={12} md={4}>\n        <AccountBillingInvoiceHistory invoices={invoices} />\n      </Grid>\n    </Grid>\n  );\n}\n","import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\n// form\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\n// @mui\nimport { Stack, Card } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// components\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function AccountChangePassword() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const ChangePassWordSchema = Yup.object().shape({\n    oldPassword: Yup.string().required('Old Password is required'),\n    newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\n    confirmNewPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match'),\n  });\n\n  const defaultValues = {\n    oldPassword: '',\n    newPassword: '',\n    confirmNewPassword: '',\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(ChangePassWordSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = async () => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      reset();\n      enqueueSnackbar('Update success!');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3} alignItems=\"flex-end\">\n          <RHFTextField name=\"oldPassword\" type=\"password\" label=\"Old Password\" />\n\n          <RHFTextField name=\"newPassword\" type=\"password\" label=\"New Password\" />\n\n          <RHFTextField name=\"confirmNewPassword\" type=\"password\" label=\"Confirm New Password\" />\n\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Save Changes\n          </LoadingButton>\n        </Stack>\n      </FormProvider>\n    </Card>\n  );\n}\n","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useCallback,useEffect,useState } from 'react';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Box, Grid, Card, Stack, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// hooks\nimport useAuth from '../../../../hooks/useAuth';\n// utils\nimport { fData } from '../../../../utils/formatNumber';\n// redux\nimport {useDispatch,useSelector,store} from '../../../../redux/store';\nimport {setAccountValues,loadAccount}  from '../../../../redux/slices/account';\n// _mock\nimport { countries } from '../../../../_mock';\n// components\nimport { FormProvider, RHFSwitch, RHFSelect, RHFTextField, RHFUploadAvatar } from '../../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nexport default function AccountGeneral() {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const {account, isLoading} = useSelector((state)=>state.account);\n  \n  const defaultValues = {\n    displayName: account?`${account.firstName} ${account.lastName}` : '',\n    email: account?.email || '',\n    avatar: account?.avatar || '',\n    phoneNumber1: account?.phoneNumber1 || '',\n    country: account?.country || '',\n    address: account?.address || '',\n    state: account?.state || '',\n    city: account?.city || '',\n    zipCode: account?.zipCode || '',\n    about: account?.about || '',\n    \n  }\n\n  const UpdateUserSchema = Yup.object().shape({\n    displayName: Yup.string().required('Name is required'),\n  });\n\n\n  const methods = useForm({\n    resolver: yupResolver(UpdateUserSchema),\n    defaultValues,\n  }); \n  const {\n    setValue,\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      \n      dispatch(setAccountValues(data,enqueueSnackbar));\n       \n      \n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n\n      if (file) { \n        setValue(\n          'avatar',\n          Object.assign(file, \n            {\n              preview: URL.createObjectURL(file),\n            }\n          )\n        );\n      }\n    },\n    [setValue]\n  );\n  console.log(account);\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Card sx={{ py: 10, px: 3, textAlign: 'center' }}>\n            <RHFUploadAvatar\n              name=\"avatar\"\n              accept=\"image/*\"\n              maxSize={3145728}\n              onDrop={handleDrop}\n              helperText={\n                <Typography\n                  variant=\"caption\"\n                  sx={{\n                    mt: 2,\n                    mx: 'auto',\n                    display: 'block',\n                    textAlign: 'center',\n                    color: 'text.secondary',\n                  }}\n                >\n                  Allowed *.jpeg, *.jpg, *.png, *.gif\n                  <br /> max size of {fData(3145728)}\n                </Typography>\n              }\n            />\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={8}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              sx={{\n                display: 'grid',\n                rowGap: 3,\n                columnGap: 2,\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\n              }}\n            >\n              <RHFTextField name=\"displayName\" label=\"Name\" />\n              <RHFTextField name=\"email\" label=\"Email Address\" />\n\n              <RHFTextField name=\"phoneNumber1\" label=\"Phone Number\" />\n              <RHFTextField name=\"address\" label=\"Address\" />\n\n              <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\n                <option value=\"\" />\n                {countries.map((option) => (\n                  <option key={option.code} value={option.label}>\n                    {option.label}\n                  </option>\n                ))}\n              </RHFSelect>\n\n              <RHFTextField name=\"state\" label=\"State/Region\" />\n\n              <RHFTextField name=\"city\" label=\"City\" />\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\n            </Box>\n\n            <Stack spacing={3} alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <RHFTextField name=\"about\" multiline rows={4} label=\"About\" />\n\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isLoading}>\n                Save Changes\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import { useSnackbar } from 'notistack';\n// form\nimport { useForm } from 'react-hook-form';\n// @mui\nimport { Card, Stack, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// components\nimport { FormProvider, RHFSwitch } from '../../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nconst ACTIVITY_OPTIONS = [\n  {\n    value: 'activityComments',\n    label: 'Email me when someone comments onmy article',\n  },\n  {\n    value: 'activityAnswers',\n    label: 'Email me when someone answers on my form',\n  },\n  { value: 'activityFollows', label: 'Email me hen someone follows me' },\n];\n\nconst APPLICATION_OPTIONS = [\n  { value: 'applicationNews', label: 'News and announcements' },\n  { value: 'applicationProduct', label: 'Weekly product updates' },\n  { value: 'applicationBlog', label: 'Weekly blog digest' },\n];\n\nconst NOTIFICATION_SETTINGS = {\n  activityComments: true,\n  activityAnswers: true,\n  activityFollows: false,\n  applicationNews: true,\n  applicationProduct: false,\n  applicationBlog: false,\n};\n\n// ----------------------------------------------------------------------\n\nexport default function AccountNotifications() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const defaultValues = {\n    activityComments: NOTIFICATION_SETTINGS.activityComments,\n    activityAnswers: NOTIFICATION_SETTINGS.activityAnswers,\n    activityFollows: NOTIFICATION_SETTINGS.activityFollows,\n    applicationNews: NOTIFICATION_SETTINGS.applicationNews,\n    applicationProduct: NOTIFICATION_SETTINGS.applicationProduct,\n    applicationBlog: NOTIFICATION_SETTINGS.applicationBlog,\n  };\n\n  const methods = useForm({\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = async () => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      enqueueSnackbar('Update success!');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3} alignItems=\"flex-end\">\n          <Stack spacing={2} sx={{ width: 1 }}>\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n              Activity\n            </Typography>\n\n            <Stack spacing={1}>\n              {ACTIVITY_OPTIONS.map((activity) => (\n                <RHFSwitch key={activity.value} name={activity.value} label={activity.label} sx={{ m: 0 }} />\n              ))}\n            </Stack>\n          </Stack>\n\n          <Stack spacing={2} sx={{ width: 1 }}>\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n              Application\n            </Typography>\n            <Stack spacing={1}>\n              {APPLICATION_OPTIONS.map((application) => (\n                <RHFSwitch key={application.value} name={application.value} label={application.label} sx={{ m: 0 }} />\n              ))}\n            </Stack>\n          </Stack>\n\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Save Changes\n          </LoadingButton>\n        </Stack>\n      </FormProvider>\n    </Card>\n  );\n}\n","import PropTypes from 'prop-types';\nimport {useEffect} from 'react';\nimport { useSnackbar } from 'notistack';\n// form\nimport { useForm } from 'react-hook-form';\n// @mui\nimport { Stack, Card, InputAdornment } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n// components\nimport Iconify from '../../../../components/Iconify';\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\nimport {useDispatch,useSelector,store} from '../../../../redux/store';\nimport {setAccountSocialLinks,loadAccount}  from '../../../../redux/slices/account';\n\n//\n\n// ----------------------------------------------------------------------\n\nconst SOCIAL_LINKS = [\n  {\n    value: 'facebookLink',\n    icon: <Iconify icon={'eva:facebook-fill'} width={24} height={24} />,\n  },\n  {\n    value: 'instagramLink',\n    icon: <Iconify icon={'ant-design:instagram-filled'} width={24} height={24} />,\n  },\n  {\n    value: 'linkedinLink',\n    icon: <Iconify icon={'eva:linkedin-fill'} width={24} height={24} />,\n  },\n  {\n    value: 'twitterLink',\n    icon: <Iconify icon={'eva:twitter-fill'} width={24} height={24} />,\n  },\n];\n\n// ----------------------------------------------------------------------\n\n\nexport default function AccountSocialLinks() {\n  const { enqueueSnackbar } = useSnackbar();\n  const dispatch = useDispatch();\n  const {account, isLoading} = useSelector((state)=>state.account);\n  const defaultValues = {\n    facebookLink: (account && account.socialLink&& account.socialLink.facebookLink)?account.socialLink.facebookLink :'',\n    instagramLink: (account && account.socialLink&& account.socialLink.instagramLink)?account.socialLink.instagramLink :'',\n    linkedinLink: (account && account.socialLink&& account.socialLink.linkedinLink)?account.socialLink.linkedinLink :'',\n    twitterLink: (account && account.socialLink&& account.socialLink.twitterLink)?account.socialLink.twitterLink : '',\n  };\n\n  const methods = useForm({\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n    reset,\n    formState: { isSubmitting },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      dispatch(setAccountSocialLinks(data,enqueueSnackbar));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(()=>{\n    dispatch(loadAccount());\n  },[dispatch]);\n  useEffect(()=>{\n    if(account && account.email){\n      reset(defaultValues);\n      console.log(defaultValues);\n    }\n  },[account]);\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n        <Stack spacing={3} alignItems=\"flex-end\">\n          {SOCIAL_LINKS.map((link,index) => (\n            <RHFTextField\n              key={index}\n              name={link.value}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">{link.icon}</InputAdornment>,\n              }}\n            />\n          ))}\n\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isLoading}>\n            Save Changes\n          </LoadingButton>\n        </Stack>\n      </FormProvider>\n    </Card>\n  );\n}\n","import { capitalCase } from 'change-case';\nimport { useState,useEffect } from 'react';\n// @mui\nimport { Container, Tab, Box, Tabs } from '@mui/material';\n// routes\nimport { PATH_APPLICATION } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\nimport useLocales from '../../hooks/useLocales';\n// _mock_\nimport { _userPayment, _userAddressBook, _userInvoices, _userAbout } from '../../_mock';\n// components\nimport Page from '../../components/Page';\nimport Iconify from '../../components/Iconify';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n\n\n// sections\nimport {\n  AccountGeneral,\n  AccountBilling,\n  AccountSocialLinks,\n  AccountNotifications,\n  AccountChangePassword,\n} from '../../sections/@dashboard/user/account';\n\n// ----------------------------------------------------------------------\n\nexport default function UserAccount() {\n  const { themeStretch } = useSettings();\n  const {translate} = useLocales();\n\n  const [currentTab, setCurrentTab] = useState('general');\n\n  const ACCOUNT_TABS = [\n    {\n      value: 'general',\n      icon: <Iconify icon={'ic:round-account-box'} width={20} height={20} />,\n      component: <AccountGeneral />,\n    },\n    {\n      value: 'billing',\n      icon: <Iconify icon={'ic:round-receipt'} width={20} height={20} />,\n      component: <AccountBilling cards={_userPayment} addressBook={_userAddressBook} invoices={_userInvoices} />,\n    },\n    {\n      value: 'notifications',\n      icon: <Iconify icon={'eva:bell-fill'} width={20} height={20} />,\n      component: <AccountNotifications />,\n    },\n    {\n      value: 'social_links',\n      icon: <Iconify icon={'eva:share-fill'} width={20} height={20} />,\n      component: <AccountSocialLinks />,\n    },\n    {\n      value: 'change_password',\n      icon: <Iconify icon={'ic:round-vpn-key'} width={20} height={20} />,\n      component: <AccountChangePassword />,\n    },\n  ];\n \n  return (\n    <Page title=\"User: Account Settings\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Account\"\n          links={[\n            { name: 'Profile', href: PATH_APPLICATION.profile.account },\n            \n            { name: 'Account Settings' },\n          ]}\n        />\n\n        <Tabs\n          value={currentTab}\n          scrollButtons=\"auto\"\n          variant=\"scrollable\"\n          allowScrollButtonsMobile\n          onChange={(e, value) => setCurrentTab(value)}\n        >\n          {ACCOUNT_TABS.map((tab) => (\n            <Tab disableRipple key={tab.value} label={capitalCase(translate(tab.value))} icon={tab.icon} value={tab.value} />\n          ))}\n        </Tabs>\n\n        <Box sx={{ mb: 5 }} />\n\n        {ACCOUNT_TABS.map((tab) => {\n          const isMatched = tab.value === currentTab;\n          return isMatched && <Box key={tab.value}>{tab.component}</Box>;\n        })}\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}