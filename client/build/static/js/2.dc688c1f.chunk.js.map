{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/material/internal/svg-icons/Cancel.js","../node_modules/@mui/material/Chip/chipClasses.js","../node_modules/@mui/material/Chip/Chip.js","../node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","skipSx","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","breadcrumbsClasses","generateUtilityClasses","_excluded","BreadcrumbsRoot","Typography","name","overridesResolver","styles","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","current","index","length","concat","push","Breadcrumbs","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getChipUtilityClass","chipClasses","ChipRoot","clickable","onDelete","size","variant","avatar","capitalize","icon","deleteIcon","deletable","deleteIconColor","alpha","text","primary","fontFamily","typography","fontSize","pxToRem","justifyContent","action","selected","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","verticalAlign","boxSizing","disabled","opacity","disabledOpacity","pointerEvents","avatarColorPrimary","contrastText","dark","avatarColorSecondary","secondary","avatarSmall","WebkitTapHighlightColor","main","focusVisible","selectedOpacity","focusOpacity","hoverOpacity","hover","iconSmall","deleteIconSmall","ChipLabel","label","overflow","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","key","Chip","avatarProp","clickableProp","ComponentProp","deleteIconProp","iconProp","onKeyDown","onKeyUp","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","slots","moreProps","focusVisibleClassName","disableRipple","customClasses","CancelIcon","_jsxs","as","undefined","currentTarget","target","preventDefault","blur","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","option","candidate","indexOf","createFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabledProp","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","newValue","newInputValue","prevValue","valueChange","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","useEventCallback","tagToFocus","setHighlightedIndex","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","splice","ctrlKey","metaKey","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","defaultMuiPrevented","which","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","handleOptionMouseOver","Number","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","group","getRootProps","role","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","getListboxProps","getOptionProps","onMouseOver","onTouchStart","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","clearIndicator","visibility","maxWidth","minWidth","inputClasses","paddingBottom","inputBaseClasses","sizeSmall","outlinedInputClasses","endAdornment","right","filledInputClasses","paddingTop","hiddenLabel","flexGrow","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","IconButton","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","zIndex","modal","AutocompletePaper","Paper","paper","body1","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","breakpoints","up","AutocompleteGroupLabel","ListSubheader","groupLabel","background","AutocompleteGroupUl","groupUl","Autocomplete","_componentsProps$clea","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","params","props2","renderListOption","optionProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2"],"mappings":"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","file":"static/js/2.dc688c1f.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase, {\n  skipSx: true\n})(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorPrimary', 'colorSecondary', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(color)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIconOutlinedColor${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconOutlinedColor${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], variant === 'outlined' && styles[`outlined${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return _extends({\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      color: theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    }),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: theme.palette[ownerState.color].main,\n    color: theme.palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: theme.shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: theme.palette[ownerState.color].main,\n  border: `1px solid ${alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: theme.palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const small = size === 'small';\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    const customClasses = clsx(color !== 'default' && (variant === 'outlined' ? classes[`deleteIconOutlinedColor${capitalize(color)}`] : classes[`deleteIconColor${capitalize(color)}`]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: theme.zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              ownerState: ownerState,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        ownerState: ownerState,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"sourceRoot":""}